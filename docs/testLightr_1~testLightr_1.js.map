{"version":3,"sources":["webpack:///./src/testLightr_1/scripts/controller.js","webpack:///./src/testLightr_1/scripts/trafficLighter.js","webpack:///./src/testLightr_1/testLightr_1.js"],"names":["Controller","targetElement","render","renderButtons","container","document","createElement","header","content","classList","add","appendChild","addButton","textContent","onclick","addNewLighter","lighter","TrafficLighter","target","colors","lights","renderLights","index","startAutoSwitch","intId","setInterval","toggleOff","changeIndex","result","addEventListener","clearInterval","color","light","push","remove","controller1","querySelector"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEO,IAAMA,UAAb;AAAA;AAAA;AACE,sBAAYC,aAAZ,EAA0B;AAAA;;AACxB,SAAKA,aAAL,GAAqBA,aAArB;AACA,SAAKC,MAAL;AACA,SAAKC,aAAL;AACD;;AALH;AAAA;AAAA,6BAOU;AACN,UAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACA,WAAKC,MAAL,GAAcF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;AACA,WAAKE,OAAL,GAAeH,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACA,WAAKE,OAAL,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,WAA3B;AACAN,eAAS,CAACO,WAAV,CAAsB,KAAKJ,MAA3B;AACAH,eAAS,CAACO,WAAV,CAAsB,KAAKH,OAA3B;AACA,WAAKP,aAAL,CAAmBU,WAAnB,CAA+BP,SAA/B;AAED;AAhBH;AAAA;AAAA,oCAkBiB;AAAA;;AACb,UAAMQ,SAAS,GAAGP,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAlB;AACAM,eAAS,CAACC,WAAV,GAAwB,GAAxB;AACA,WAAKN,MAAL,CAAYI,WAAZ,CAAwBC,SAAxB;;AACAA,eAAS,CAACE,OAAV,GAAoB,YAAM;AACxB,aAAI,CAACC,aAAL;AACD,OAFD;AAGD;AAzBH;AAAA;AAAA,oCA2BiB;AACd,UAAMC,OAAO,GAAG,IAAIC,8DAAJ,+DAAmB,KAAKT,OAAxB,CAAhB;AACA;AA7BH;;AAAA;AAAA,I;;;;;;;;;;;;;;;;;;;;;;;;ACFO,IAAMS,cAAb;AAAA;AAAA;AACE,0BAAYC,MAAZ,EAAmB;AAAA;;AACjB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAc,CAAC,KAAD,EAAQ,QAAR,EAAkB,OAAlB,CAAd;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKlB,MAAL;AACA,SAAKmB,YAAL;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,eAAL;AAED;;AAVH;AAAA;AAAA,sCAWmB;AAAA;;AACf,WAAKC,KAAL,GAAaC,WAAW,CAAC,YAAM;AAC7B,aAAI,CAACC,SAAL;;AACA,aAAI,CAACN,MAAL,CAAY,KAAI,CAACO,WAAL,EAAZ,EAAgClB,SAAhC,CAA0CC,GAA1C,CAA8C,QAA9C;AACD,OAHuB,EAGrB,IAHqB,CAAxB;AAID;AAhBH;AAAA;AAAA,kCAiBe;AACX,UAAIkB,MAAM,GAAG,KAAKN,KAAL,GAAa,CAAb,GAAiB,KAAKA,KAAtB,GAA8B,KAAKA,KAAL,GAAa,CAAxD;AACA,WAAKA,KAAL;AACA,aAAOM,MAAP;AAEF;AAtBF;AAAA;AAAA,6BA0BU;AAAA;;AACP,WAAKZ,OAAL,GAAeX,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACC,WAAKU,OAAL,CAAaP,SAAb,CAAuBC,GAAvB,CAA2B,SAA3B;AACA,WAAKQ,MAAL,CAAYP,WAAZ,CAAwB,KAAKK,OAA7B;AACA,WAAKA,OAAL,CAAaa,gBAAb,CAA8B,YAA9B,EAA4C,YAAM;AAACC,qBAAa,CAAC,MAAI,CAACN,KAAN,CAAb;AAA0B,OAA7E;AACA,WAAKR,OAAL,CAAaa,gBAAb,CAA8B,YAA9B,EAA4C,YAAM;AAAE,cAAI,CAACN,eAAL;AAAuB,OAA3E;AACD;AAhCH;AAAA;AAAA,mCAiCgB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,cACJQ,KADI;AAEV,cAAMC,KAAK,GAAG3B,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;AACA0B,eAAK,CAACvB,SAAN,CAAgBC,GAAhB,CAAoB,OAApB,kBAAsCqB,KAAtC;;AACA,gBAAI,CAACX,MAAL,CAAYa,IAAZ,CAAiBD,KAAjB;;AACA,gBAAI,CAAChB,OAAL,CAAaL,WAAb,CAAyBqB,KAAzB;;AACAA,eAAK,CAAClB,OAAN,GAAgB,YAAM;AACpB,kBAAI,CAACY,SAAL;;AACAM,iBAAK,CAACvB,SAAN,CAAgBC,GAAhB,CAAoB,QAApB;AAGD,WALD;AANU;;AACZ,6BAAiB,KAAKS,MAAtB,8HAA6B;AAAA;AAW5B;AAZW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcb;AA/CH;AAAA;AAAA,gCAiDa;AAAA;AAAA;AAAA;;AAAA;AACT,8BAAiB,KAAKC,MAAtB,mIAA6B;AAAA,cAArBY,KAAqB;AAC3BA,eAAK,CAACvB,SAAN,CAAgByB,MAAhB,CAAuB,QAAvB;AACD;AAHQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIV;AArDH;;AAAA;AAAA,I;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA,IAAMC,WAAW,GAAG,IAAInC,8DAAJ,CAAeK,QAAQ,CAAC+B,aAAT,CAAuB,MAAvB,CAAf,CAApB,C","file":"testLightr_1~testLightr_1.js","sourcesContent":["import { TrafficLighter } from './trafficLighter';\r\n\r\nexport class Controller{\r\n  constructor(targetElement){\r\n    this.targetElement = targetElement;\r\n    this.render();\r\n    this.renderButtons();\r\n  }\r\n\r\n  render(){\r\n    const container = document.createElement('div');\r\n    this.header = document.createElement('header');\r\n    this.content = document.createElement('div');\r\n    this.content.classList.add('flexBlock');\r\n    container.appendChild(this.header);\r\n    container.appendChild(this.content);\r\n    this.targetElement.appendChild(container);  \r\n    \r\n  }\r\n\r\n  renderButtons(){\r\n    const addButton = document.createElement('button');\r\n    addButton.textContent = '+';\r\n    this.header.appendChild(addButton);\r\n    addButton.onclick = () => { \r\n      this.addNewLighter();\r\n    }    \r\n  }\r\n\r\n  addNewLighter(){\r\n   const lighter = new TrafficLighter(this.content);\r\n  }\r\n \r\n}","export class TrafficLighter{\r\n  constructor(target){\r\n    this.target = target;\r\n    this.colors = ['red', 'yellow', 'green'];\r\n    this.lights = [];    \r\n    this.render();\r\n    this.renderLights();\r\n    this.index = 0;   \r\n    this.startAutoSwitch();\r\n    \r\n  }\r\n  startAutoSwitch(){    \r\n    this.intId = setInterval(() => {\r\n      this.toggleOff();\r\n      this.lights[this.changeIndex()].classList.add('active');      \r\n    }, 1000) ;    \r\n  }\r\n  changeIndex(){       \r\n    let result = this.index < 3 ? this.index : this.index = 0;\r\n    this.index++;\r\n    return result; \r\n\r\n } \r\n  \r\n\r\n \r\n  render(){\r\n   this.lighter = document.createElement('div');\r\n    this.lighter.classList.add('lighter');\r\n    this.target.appendChild(this.lighter);\r\n    this.lighter.addEventListener('mouseenter', () => {clearInterval(this.intId)});\r\n    this.lighter.addEventListener('mouseleave', () => { this.startAutoSwitch()});\r\n  }\r\n  renderLights(){\r\n    for(let color of this.colors){\r\n      const light = document.createElement('button');\r\n      light.classList.add('light', `light_${color}`);\r\n      this.lights.push(light);\r\n      this.lighter.appendChild(light);\r\n      light.onclick = () => {\r\n        this.toggleOff();\r\n        light.classList.add('active');\r\n       \r\n        \r\n      }\r\n    }\r\n    \r\n  }\r\n \r\n  toggleOff(){\r\n    for(let light of this.lights){\r\n      light.classList.remove('active');\r\n    }\r\n  }\r\n \r\n}","import './testLightr_1.scss';\r\n\r\nimport { Controller } from './scripts/controller';\r\nimport { TrafficLighter }  from './scripts/trafficLighter';\r\n\r\nconst controller1 = new Controller(document.querySelector('body'));"],"sourceRoot":""}